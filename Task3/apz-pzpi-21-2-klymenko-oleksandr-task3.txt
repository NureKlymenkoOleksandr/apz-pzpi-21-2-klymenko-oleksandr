1 КОНЦЕПТУАЛЬНЕ МОДЕЛЮВАННЯ СИСТЕМИ

Перед розробкою частини платформи для вбудованих систем необхідно провести концептуальне моделювання програмного продукту. 
Ключовим аспектом вибору платформи являється можливість підключеня до Wi-Fi для взаємодії із сервером. Створений пристрій є ключовою ланкою між користувачем та сервером, надаючи дані, за якими користувач зможе отримувати персоналізовані рекомендації. 
Котролер має мати можливість робити запити до сервера, увійти в обліковий запис користувача, почати тренування разом зі зчитуванням даних про температуру, пульс та сповіщати користувача коли останній перевищує задане нормальне значення. А також має закінчувати зчитування коли тренування скінчене, про що буде надаватися інформація через відповідь серверу на запити з вимірюваннями.
Також користувач має змогу змінити посилання, за яким пристрій звертатиметься до серверної частини.
У відповідності до вищезазначеного, була розроблена UML діаграма прецедентів (рис. А.1).

2 ОПИС РОЗРОБКИ ЗАСТОСУНКУ ДЛЯ ВБУДОВАНИХ СИСТЕМ
2.1.	Обґрунтування архітектурних рішень проєкту

В основі розробки IoT частини системи лягла монолітна архітектура, як така, що забепечить найефективнішу роботу, зручну розробку та швидкий обмін даними між компонентами програмного забезпечення, без зайвих витрат на їх передачу, в умовах обмеженої обчислювальної здатності пристрою, на якому дане програмне забезпечення буде запускатися. Створене програмне забезпечення буде розбите на окремі модулі, згідно з їх функціоналом для покращення його підтримуваності.
Обмін даними між сервером та пристроєм буде відбуватися за допомогою HTTPS запитів, що робить пристрій до сконфігурованої адреси сервера.
Надсилання даних відбуватиметься кожну хвилину, а для обробки самих запитів IoT-пристрій надсилатиме токен, що ідентифікує користувача. Він буде отримаий завдяки попередній автентифікації в меню, що наявне у створеному програмого забезпеченні.
На основі поданого була створена UML діаграма взаємодії (рис. А.2).

2.2.	Опис використаних технологій

Платформою, під яку була проведена розробка став мікроконтролер ESP32 з використанням діалекту мови Python для мкроконтролерів Micropython. Через відсутність фізичної версія мікроконтролера був використаний симулятор для розробки IoT-пристроїв під назвою Wokwi. 
Усі використані пакети входять у стандартний набір Micropython, зокрема uresuests для запитів до серверної частини, dht для роботи із датчиком DHT22, utime для роботи з часом та його форматування.

2.3.	Опис результатів розробки частини проекту для вбудованих систем

Результатом розробки стало програмне забезпечення для контролеру ESP32, що інтегроване у програмну систему для моніторингу стану клієнтів мережі спортивних зал.
Після запуску пристрою проводиться конфігурація, налаштування підключення до мережі, після чого користувачеві показане головне меню.
Однією з опцій є налаштування посилання на серверну частину. При її обранні, користувач зможе ввести нове посилання, таким чином змінюючи адресу надсилання своїх показників.
Головною фунцією пристрою є старт тренування та відслідковування показників тіла протягом нього. Кожну хвилину датчик DHT22 вимірює температуру та пульс, надсилаючи їх на сервену частину. Якщо значення пульсу перевищує вказане граничне, девайс сповіщує користувача вмикаючи червоний світлодіод. Відповідно, коли значення пульсу повертається до нормального, світлодіод вимикається. Кожне вимірювання надсилається на сервер, де воно оброблюється та зберігається до бази даних. Кожен раз пристрій оброблює відповідь від серверу, перевіряючи чи не було тренування закінчено. Якщо тренування продовжується, девайс чекає хвилину і знову проводить цикл вимірювання показникві. В іншому ж випадку він перестає знімати показання та закінчує роботу.
Детальніше принцип роботи створеного програмного забезпечення для IoT пристрою наведено в UML діаграмі станів (рис. А.3).

2.4.	Опис результатів тестування частини проекту для вбудованих систем

Після закінчення розробки було проведено функціональне тестування застосунку безпосередньо у симуляторі Wokwi.
Протягом тестування була перевірена стабільність роботи застосунку та його коректна обробка відповідей від серверу.

ВИСНОВКИ

Протягом виконання лабораторної розробки було розроблено програмне забезпечення для IoT-пристрою, що інтегроване в систему моніторингу стану клієнтів та персоналізації досвіду клієнтів мережі спортивних зал. Було описано прийнят інженені рішення, побудовано діаграми, представлено будову системи та її взаємодію з іншими частинами системи.